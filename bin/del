#!/usr/bin/python3
import os
import shutil
import sys


class Del:

    def __init__(self):
        self.base = os.path.join(os.environ['HOME'], ".trash")
        if os.path.exists(self.base):
            pass
        else:
            os.mkdir(self.base)
        args = ['--help', '-c', '-h']
        self.arg1 = sys.argv[1:]
        for j in args:
            if j in self.arg1: self.arg1.remove(j)
        self.arg2 = sys.argv[1:]
        self.hide = 0

    def clear_cache(self):
        all = os.listdir(self.base) if self.hide else [x for x in os.listdir(self.base) if not x.startswith('.')]
        for x in all:
            full = os.path.join(self.base, x)
            if os.path.isfile(full):
                os.remove(full)
            else:
                shutil.rmtree(full)

    def delete(self, p):
        try:
            if os.path.exists(p): shutil.move(p, self.base)
        except shutil.Error:
            to = os.path.join(self.base, p)
            print(f'File Existed in {to}')
            i = input('Do you wnat to override the file [y/n]')
            if i.lower() in 'yesy':
                if os.path.isfile(p):
                    os.remove(to)
                else:
                    shutil.rmtree(to)
                return self.delete(p)
        except Exception as e:
            print(e)

    def main(self):
        if len(self.arg2) < 1: os.system("readme del")
        if '-h' in self.arg2: self.hide = 1
        if '-c' in self.arg2: self.clear_cache()
        for a in self.arg1:
            if a == '*':
                h = os.listdir() if self.hide else [x for x in self.arg1 if not x.startswith('.')]
                for b in h: self.delete(b)
            if a.startswith('.') or self.hide:
                self.delete(a)
            else:
                args = [x for x in self.arg1 if not x.startswith('.')]
                for b in args:
                    self.delete(b)


if __name__ == '__main__':
    Del().main()
