#!/usr/bin/python3
import os
import sys

compileFiles = lambda file: os.path.join(os.path.join(os.path.abspath(__file__).split('/bin')[0], 'tmp'),
                                         file)


class runfile:
    def __init__(self, file):
        self.commands = {
            '.py': self.py,
            '.pyc': self.pyc,
            '.sh': self.sh,
            '.php': self.php,
            '.dart': self.dart,
            '.js': self.js,
            '.c': self.c,
            '.cpp': self.cpp,
            '.java': self.java,
        }
        self.file = file
        self.ext = self.file.split('.')[-1]

        if not os.path.isfile(self.file):
            print(f"bash: {self.file}: No such file or directory")
            return
        if not "." in file:
            os.system(f"./{file}")
            return
        if not self.support():
            print(f'# run not support this file "{self.file}"')
            return

        self.commands['.' + self.ext]()

    def support(self):
        for x in self.commands.keys():
            if self.file.endswith(x): return True

    def run(self, language):
        os.system(
            f'{language} {" ".join(sys.argv[1:])}'
            # example:
            # python3 file.py argvs
        )

    def py(self):
        self.run('python3')

    def pyc(self):
        self.run('python3')

    def sh(self):
        self.run('bash')

    def php(self):
        self.run('php')

    def dart(self):
        self.run('dart')

    def js(self):
        self.run('node')

    def c(self):
        os.system(f'gcc {self.file} -o {compileFiles("Cfile")}')
        os.system(f'{compileFiles("Cfile")} {" ".join(sys.argv[2:])}')

    def cpp(self):
        os.system(f'g++ {self.file} -o {compileFiles("C++file")}')
        os.system(f'{compileFiles("C++file")} {" ".join(sys.argv[2:])}')

    def java(self):
        if 'termux' in os.getcwd():
            os.system(f'ecj {self.file}')
            os.system(f'dx --dex --output={self.file.split(".")[0]}.dex {self.file.split(".")[0]}.class')
            os.system(f'dalvikvm -cp {self.file.split(".")[0]}.dex {self.file.split(".")[0]}')
            return


try:
    runfile(sys.argv[1])
except IndexError:
    print('# run <file name>')
